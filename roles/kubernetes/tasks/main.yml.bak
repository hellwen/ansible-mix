# Create a new namespace with in-line YAML.
- name: Create a kubernetes namespace
  kubernetes:
    api_endpoint: 123.45.67.89
    url_username: admin
    url_password: redacted
    inline_data:
      kind: Namespace
      apiVersion: v1
      metadata:
        name: ansible-test
        labels:
          label_env: production
          label_ver: latest
        annotations:
          a1: value1
          a2: value2
    state: present

# Create a new namespace from a YAML file.
- name: Create a kubernetes namespace
  kubernetes:
    api_endpoint: 123.45.67.89
    url_username: admin
    url_password: redacted
    file_reference: /path/to/create_namespace.yaml
    state: present

# Do the same thing, but using the insecure localhost port
- name: Create a kubernetes namespace
  kubernetes:
    api_endpoint: 123.45.67.89
    insecure: true
    file_reference: /path/to/create_namespace.yaml
    state: present

- copy:
    src: /srv/myfiles/foo.conf
    dest: /etc/foo.conf
    owner: foo
    group: foo
    mode: 0644
#
#About: This will install docker
#
- name: Create a kubelet service
  roles:
  - role: systemd-service
    systemd_service_name: "kubelet"
    systemd_service_Unit_Description: Kubernetes Kubelet Server
    systemd_service_Unit_Documentation: https://github.com/GoogleCloudPlatform/kubernetes
    systemd_service_Unit_Requires: docker.service
    systemd_service_Unit_After: docker.service
    systemd_service_Service_WorkingDirectory: /var/lib/kubelet
    systemd_service_Service_EnvironmentFile:
      - -/etc/kubernetes/config
      - -/etc/kubernetes/kubelet
    systemd_service_Service_ExecStart: /usr/bin/kubelet \
            $KUBE_LOGTOSTDERR \
            $KUBE_LOG_LEVEL \
            $KUBELET_API_SERVER \
            $KUBELET_ADDRESS \
            $KUBELET_PORT \
            $KUBELET_HOSTNAME \
            $KUBE_ALLOW_PRIV \
            $KUBELET_POD_INFRA_CONTAINER \
            $KUBELET_ARGS
    systemd_service_Service_Restart: on-failure
    systemd_service_Install_WantedBy: multi-user.target

- name: Create a kube-proxy service
  roles:
  - role: systemd-service
    systemd_service_name: "kube-proxy"
    systemd_service_Unit_Description: Kubernetes Kube-Proxy Server
    systemd_service_Unit_Documentation: https://github.com/GoogleCloudPlatform/kubernetes
    systemd_service_Unit_After: network.target
    systemd_service_Service_EnvironmentFile:
      - -/etc/kubernetes/config
      - -/etc/kubernetes/proxy
    systemd_service_Service_ExecStart: /usr/bin/kube-proxy \
            $KUBE_LOGTOSTDERR \
            $KUBE_LOG_LEVEL \
            $KUBE_MASTER \
            $KUBE_PROXY_ARGS
    systemd_service_Service_Restart: on-failure
    systemd_service_Service_LimitNOFILE: 65536
    systemd_service_Install_WantedBy: multi-user.target
